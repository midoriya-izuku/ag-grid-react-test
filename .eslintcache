[{"D:\\laravel\\ag-grid-react-test\\src\\index.js":"1","D:\\laravel\\ag-grid-react-test\\src\\App.js":"2","D:\\laravel\\ag-grid-react-test\\src\\reportWebVitals.js":"3","D:\\laravel\\ag-grid-react-test\\src\\contexts\\GridContext.js":"4","D:\\laravel\\ag-grid-react-test\\src\\utils\\storage.js":"5","D:\\laravel\\ag-grid-react-test\\src\\data\\tableData.js":"6","D:\\laravel\\ag-grid-react-test\\src\\utils\\validationSetter.js":"7","D:\\laravel\\ag-grid-react-test\\src\\utils\\validationFunctions.js":"8","D:\\laravel\\ag-grid-react-test\\src\\containers\\TablesContainer.js":"9","D:\\laravel\\ag-grid-react-test\\src\\containers\\TableActionContainer.js":"10","D:\\laravel\\ag-grid-react-test\\src\\components\\EditableTable.js":"11","D:\\laravel\\ag-grid-react-test\\src\\renderers\\FieldComponent.js":"12","D:\\laravel\\ag-grid-react-test\\src\\editors\\DatePicker\\DatePicker.js":"13","D:\\laravel\\ag-grid-react-test\\src\\renderers\\DeleteButtonComponent.js":"14","D:\\laravel\\ag-grid-react-test\\src\\components\\NonEditableTable.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":210,"mtime":1610692233853,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":5145,"mtime":1610701408361,"results":"20","hashOfConfig":"17"},{"size":142,"mtime":1610682212259,"results":"21","hashOfConfig":"17"},{"size":3593,"mtime":1610700494681,"results":"22","hashOfConfig":"17"},{"size":1258,"mtime":1610700494689,"results":"23","hashOfConfig":"17"},{"size":335,"mtime":1610699455580,"results":"24","hashOfConfig":"17"},{"size":597,"mtime":1610692233968,"results":"25","hashOfConfig":"17"},{"size":1263,"mtime":1610692233967,"results":"26","hashOfConfig":"17"},{"size":1838,"mtime":1610693774533,"results":"27","hashOfConfig":"17"},{"size":1942,"mtime":1610701357937,"results":"28","hashOfConfig":"17"},{"size":1325,"mtime":1610700494685,"results":"29","hashOfConfig":"17"},{"size":629,"mtime":1610692234539,"results":"30","hashOfConfig":"17"},{"size":916,"mtime":1610693774537,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ybevb1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\laravel\\ag-grid-react-test\\src\\index.js",[],["65","66"],"D:\\laravel\\ag-grid-react-test\\src\\App.js",[],"D:\\laravel\\ag-grid-react-test\\src\\reportWebVitals.js",[],"D:\\laravel\\ag-grid-react-test\\src\\contexts\\GridContext.js",["67","68"],"D:\\laravel\\ag-grid-react-test\\src\\utils\\storage.js",[],"D:\\laravel\\ag-grid-react-test\\src\\data\\tableData.js",[],"D:\\laravel\\ag-grid-react-test\\src\\utils\\validationSetter.js",[],"D:\\laravel\\ag-grid-react-test\\src\\utils\\validationFunctions.js",[],"D:\\laravel\\ag-grid-react-test\\src\\containers\\TablesContainer.js",[],"D:\\laravel\\ag-grid-react-test\\src\\containers\\TableActionContainer.js",[],"D:\\laravel\\ag-grid-react-test\\src\\components\\EditableTable.js",[],"D:\\laravel\\ag-grid-react-test\\src\\renderers\\FieldComponent.js",["69"],"import React from \"react\";\r\nimport { useGrid } from \"./../contexts/GridContext\";\r\nconst FieldComponent = ({ value, colDef, data, placeholder }) => {\r\n  let { submitted } = useGrid();\r\n  let disp = null;\r\n//if value is empty\r\n  if (value?.length > 0) {\r\n    //if this cell has been edited had is not valid\r\n    if (data.isError[colDef.field]?.value) {\r\n      disp = (\r\n        <div\r\n          style={{\r\n            textAlign: \"left\",\r\n            paddingLeft: \"10px\",\r\n            color: \"black\",\r\n            background: \"yellow\",\r\n          }}\r\n        >\r\n          {value}\r\n        </div>\r\n      );\r\n    } else {\r\n      //if cell is edited and is valid\r\n      disp = (\r\n        <div\r\n          style={{\r\n            textAlign: \"left\",\r\n            paddingLeft: \"10px\",\r\n            color: \"black\",\r\n          }}\r\n        >\r\n          {value}\r\n        </div>\r\n      );\r\n    }\r\n  } else if (\r\n    (value?.length === 0 && data.isError[colDef.field]?.cellEdited) ||\r\n    (value?.length === 0 && submitted)\r\n  ) {\r\n    //if cell value is empty and has cell has been edited display error\r\n    //or if cell value has not been edited but user tried to submit the cell with empty value display error\r\n    disp = (\r\n      <div\r\n        style={{\r\n          textAlign: \"left\",\r\n          paddingLeft: \"10px\",\r\n          background: \"red\",\r\n          color: \"white\",\r\n          display: \"block\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {placeholder}\r\n      </div>\r\n    );\r\n  } else {\r\n    //default value to be shown when new row is added\r\n    disp = (\r\n      <div\r\n        style={{\r\n          textAlign: \"left\",\r\n          paddingLeft: \"10px\",\r\n          color: \"gray\",\r\n          display: \"block\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {placeholder}\r\n      </div>\r\n    );\r\n  }\r\n  return <>{disp}</>;\r\n};\r\n\r\nexport default FieldComponent;\r\n","D:\\laravel\\ag-grid-react-test\\src\\editors\\DatePicker\\DatePicker.js",["70"],"import React, { forwardRef, useState, useImperativeHandle } from \"react\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default forwardRef((props, ref) => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  function handleDateChange(d) {\r\n    setSelectedDate(d);\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      init: (params) => {\r\n        setSelectedDate(Date.parse(params.value));\r\n      },\r\n      getValue: () => {\r\n        let dateString = null;\r\n        if (selectedDate) {\r\n          dateString = format(selectedDate, \"dd/MM/yyyy\");\r\n        }\r\n        return dateString;\r\n      },\r\n      isCancelAfterEnd: () => {\r\n        return !selectedDate;\r\n      },\r\n      afterGuiAttached: () => {\r\n        if (!props.value) {\r\n          return;\r\n        }\r\n        const [_, day, month, year] = props.value.match(\r\n          /(\\d{2})\\/(\\d{2})\\/(\\d{4})/\r\n        );\r\n        let selectedDate = new Date(year, month - 1, day);\r\n        setSelectedDate(selectedDate);\r\n      },\r\n    };\r\n  });\r\n\r\n  return (\r\n    <DatePicker\r\n      dateFormat=\"dd/MM/yyyy\"\r\n      selected={selectedDate}\r\n      onChange={handleDateChange}\r\n    />\r\n  );\r\n});\r\n","D:\\laravel\\ag-grid-react-test\\src\\renderers\\DeleteButtonComponent.js",[],"D:\\laravel\\ag-grid-react-test\\src\\components\\NonEditableTable.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":34,"column":49,"nodeType":"77","messageId":"78","endLine":34,"endColumn":51},{"ruleId":"79","severity":1,"message":"80","line":157,"column":6,"nodeType":"81","endLine":157,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":38,"column":13,"nodeType":"85","messageId":"86","endLine":38,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":34,"column":16,"nodeType":"89","messageId":"90","endLine":34,"endColumn":17},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTableRowData'. Either include it or remove the dependency array.","ArrayExpression",["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [setTableRowData]",{"range":"96","text":"97"},[4818,4820],"[setTableRowData]"]